@model Beacon.Models.Device

@{
    ViewData["Title"] = "Delete Device";
    Layout = "_Layout";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Devices</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Details", new { id = Model.Id })">@Model.Hostname</a></li>
                    <li class="breadcrumb-item active">Delete</li>
                </ol>
            </nav>

            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-exclamation-triangle"></i> Delete Device
                    </h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning" role="alert">
                        <h5 class="alert-heading">
                            <i class="fas fa-exclamation-triangle"></i> Warning!
                        </h5>
                        <p>Are you sure you want to delete this device? This action cannot be undone.</p>
                        <hr>
                        <p class="mb-0">
                            This will permanently remove:
                            <ul class="mt-2">
                                <li>Device information and monitoring data</li>
                                <li>All monitored ports (@(Model.MonitoredPorts?.Count() ?? 0) ports)</li>
                                <li>SSL certificate information (@(Model.Certificates?.Count() ?? 0) certificates)</li>
                                <li>Historical monitoring data</li>
                            </ul>
                        </p>
                    </div>

                    <!-- Device Summary -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Device to be deleted:</h6>
                        </div>
                        <div class="card-body">
                            <dl class="row">
                                <dt class="col-sm-3">Hostname:</dt>
                                <dd class="col-sm-9"><strong>@Model.Hostname</strong></dd>

                                <dt class="col-sm-3">IP Address:</dt>
                                <dd class="col-sm-9"><code>@Model.IpAddress</code></dd>

                                <dt class="col-sm-3">Status:</dt>
                                <dd class="col-sm-9">
                                    @switch (Model.Status)
                                    {
                                        case Beacon.Models.DeviceStatus.Online:
                                            <span class="badge bg-success">
                                                <i class="fas fa-check-circle"></i> Online
                                            </span>
                                            break;
                                        case Beacon.Models.DeviceStatus.Offline:
                                            <span class="badge bg-danger">
                                                <i class="fas fa-times-circle"></i> Offline
                                            </span>
                                            break;
                                        default:
                                            <span class="badge bg-warning">
                                                <i class="fas fa-question-circle"></i> Unknown
                                            </span>
                                            break;
                                    }
                                </dd>

                                <dt class="col-sm-3">Last Seen:</dt>
                                <dd class="col-sm-9">
                                    @if (Model.LastSeen.HasValue)
                                    {
                                        <span title="@Model.LastSeen.Value.ToString("yyyy-MM-dd HH:mm:ss UTC")">
                                            @Model.LastSeen.Value.ToString("yyyy-MM-dd HH:mm:ss UTC")
                                        </span>
                                        <small class="text-muted">
                                            (@((DateTime.UtcNow - Model.LastSeen.Value).TotalMinutes < 1 ? "Just now" :
                                               (DateTime.UtcNow - Model.LastSeen.Value).TotalHours < 1 ? $"{(int)(DateTime.UtcNow - Model.LastSeen.Value).TotalMinutes} minutes ago" :
                                               (DateTime.UtcNow - Model.LastSeen.Value).TotalDays < 1 ? $"{(int)(DateTime.UtcNow - Model.LastSeen.Value).TotalHours} hours ago" :
                                               $"{(int)(DateTime.UtcNow - Model.LastSeen.Value).TotalDays} days ago"))
                                        </small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Never</span>
                                    }
                                </dd>

                                <dt class="col-sm-3">Created:</dt>
                                <dd class="col-sm-9">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss UTC")</dd>

                                <dt class="col-sm-3">Updated:</dt>
                                <dd class="col-sm-9">@Model.UpdatedAt.ToString("yyyy-MM-dd HH:mm:ss UTC")</dd>
                            </dl>
                        </div>
                    </div>

                    <!-- Monitored Ports Summary -->
                    @if (Model.MonitoredPorts?.Any() == true)
                    {
                        <div class="card mb-4">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <i class="fas fa-plug"></i> Monitored Ports (@Model.MonitoredPorts.Count())
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    @foreach (var port in Model.MonitoredPorts.Take(6))
                                    {
                                        <div class="col-md-4 mb-2">
                                            <span class="badge bg-secondary">@port.Port/@port.Protocol</span>
                                            @if (!string.IsNullOrEmpty(port.ServiceName))
                                            {
                                                <small class="text-muted">(@port.ServiceName)</small>
                                            }
                                        </div>
                                    }
                                    @if (Model.MonitoredPorts.Count() > 6)
                                    {
                                        <div class="col-12">
                                            <small class="text-muted">... and @(Model.MonitoredPorts.Count() - 6) more ports</small>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    <!-- SSL Certificates Summary -->
                    @if (Model.Certificates?.Any() == true)
                    {
                        <div class="card mb-4">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <i class="fas fa-certificate"></i> SSL Certificates (@Model.Certificates.Count())
                                </h6>
                            </div>
                            <div class="card-body">
                                @foreach (var cert in Model.Certificates.Take(3))
                                {
                                    <div class="mb-2">
                                        <strong>@cert.CommonName</strong>
                                        <small class="text-muted">
                                            (Expires: @cert.ExpiryDate.ToString("yyyy-MM-dd"))
                                        </small>
                                    </div>
                                }
                                @if (Model.Certificates.Count() > 3)
                                {
                                    <small class="text-muted">... and @(Model.Certificates.Count() - 3) more certificates</small>
                                }
                            </div>
                        </div>
                    }

                    <!-- Confirmation Form -->
                    <form method="post" asp-action="Delete" asp-route-id="@Model.Id">
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-danger" onclick="return confirm('Are you absolutely sure you want to delete @Model.Hostname? This action cannot be undone.')">
                                <i class="fas fa-trash"></i> Delete Device
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Add additional confirmation for delete action
    document.addEventListener('DOMContentLoaded', function () {
        const deleteForm = document.querySelector('form[asp-action="Delete"]');
        if (deleteForm) {
            deleteForm.addEventListener('submit', function (e) {
                const hostname = '@Model.Hostname';
                const confirmMessage = `Are you absolutely sure you want to delete "${hostname}"?\n\nThis will permanently remove:\n- Device monitoring data\n- All monitored ports\n- SSL certificates\n- Historical data\n\nThis action cannot be undone.`;

                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                }
            });
        }
    });
</script>