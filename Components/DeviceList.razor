@using Beacon.Models
@using Beacon.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h3>Devices</h3>

            @if (devices == null)
            {
                <p><em>Loading...</em></p>
            }
            else if (!devices.Any())
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> No devices found. Add some devices to start monitoring.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Status</th>
                                <th>Hostname</th>
                                <th>IP Address</th>
                                <th>Last Seen</th>
                                <th>Ports</th>
                                <th>Certificates</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var device in devices)
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-@GetStatusColor(device.Status)">
                                            @device.Status
                                        </span>
                                    </td>
                                    <td>@device.Hostname</td>
                                    <td>@device.IpAddress</td>
                                    <td>@device.LastSeen.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@device.MonitoredPorts.Count</td>
                                    <td>@device.Certificates.Count</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" @onclick="() => ViewDevice(device.Id)">
                                            <i class="fas fa-eye"></i> View
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Device>? devices;

    protected override async Task OnInitializedAsync()
    {
        devices = await DbContext.Devices
            .Include(d => d.MonitoredPorts)
            .Include(d => d.Certificates)
            .OrderBy(d => d.Hostname)
            .ToListAsync();
    }

    private string GetStatusColor(DeviceStatus status)
    {
        return status switch
        {
            DeviceStatus.Online => "success",
            DeviceStatus.Offline => "danger",
            DeviceStatus.Warning => "warning",
            DeviceStatus.Critical => "danger",
            _ => "secondary"
        };
    }

    private void ViewDevice(int deviceId)
    {
        // TODO: Navigate to device details
        Console.WriteLine($"Viewing device {deviceId}");
    }
}