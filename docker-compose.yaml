version: '3.8'

services:
  beacon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: beacon-app
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=your_cert_password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
      - ./logs:/app/logs
    networks:
      - beacon-network
    restart: unless-stopped
    depends_on:
      - beacon-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  beacon-db:
    image: postgres:15-alpine
    container_name: beacon-postgres
    environment:
      POSTGRES_DB: beacon_db
      POSTGRES_USER: beacon_user
      POSTGRES_PASSWORD: your_secure_password
    volumes:
      - beacon_postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "8080:8081"
    networks:
      - beacon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beacon_user -d beacon_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  beacon-redis:
    image: redis:7-alpine
    container_name: beacon-redis
    ports:
      - "6379:6379"
    volumes:
      - beacon_redis_data:/data
    networks:
      - beacon-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  beacon-network:
    driver: bridge

volumes:
  beacon_postgres_data:
  beacon_redis_data: